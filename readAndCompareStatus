#!/bin/bash

# compares two entries and at differences writes them into changes
# 12 arguments, 6 for each entry
# the arguments consist of:
#   filename, permissions, owner, group, size, hash
# returns  0 proceed the iterator of the old status array (file deleted)
#          1 proceed the iterator of both status arrays (file exist in both)
#          2 proceed the iterator of the new status array (file created)
function compareEntries {
        fn1=$1; perm1=$2; own1=$3; gr1=$4; size1=$5; hash1=$6
        fn2=$7; perm2=$8; own2=$9; gr2=${10}; size2=${11}; hash2=${12}
        # compare filenames
        # filenames are equal, test if properties are still the same
        if [ $fn1 = $fn2 ]; then
                local __changes="TODO compare existing files\n"
                retStatus=1
        fi
        if [ $fn1 \< $fn2 ]; then
                local __changes="deleted file $fn1"
                retStatus=0
        fi
        if [ $fn1 \> $fn2 ]; then
                local __changes="added file $fn2"
                retStatus=2
        fi
        echo "$retStatus" "$__changes"
}

status1=( $(cat $1) )
index1=0
length1=$((${#status1[@]} - 1))

status2=( $(cat $2) )
index2=0
length2=$((${#status2[@]} - 1))

changes=()

while [ $index1 -lt $length1 ] && [ $index2 -lt $length2 ]; do
        retval=`compareEntries ${status1[$((index1 + 0))]} ${status1[$((index1 + 1))]} ${status1[$((index1 + 2))]} ${status1[$((index1 + 3))]} ${status1[$((index1 + 4))]} ${status1[$((index1 + 5))]} ${status2[$((index2 + 0))]} ${status2[$((index2 + 1))]} ${status2[$((index2 + 2))]} ${status2[$((index2 + 3))]} ${status2[$((index2 + 4))]} ${status2[$((index2 + 5))]}`
        changes[${#changes[@]}]="`echo $retval | cut -c 3-`"
        retval=`echo $retval | cut -c 1-2`
        if [ $retval -lt 2 ]; then
                index1=$(($index1 + 6))
        fi
        if [ $retval -gt 0 ]; then
                index2=$(($index2 + 6))
        fi
done

# add remaining files, which have been added or deleted
# $1 is the array of the file
# $2 the start position
# $3 if the content is added or removed
function addAddedDeletedFiles {
        declare -a tmpvar=("${!1}")
        for i in $(seq $2 6 $((${#tmpvar[@]} - 1))); do
                changes[${#changes[@]}]="$3 file ${tmpvar[i]}"
        done
}

if [ $index1 -lt $length1 ]; then
        echo "all items ${status1[@]}"
        addAddedDeletedFiles status1[@] $index1 "deleted"
fi
if [ $index2 -lt $length2 ]; then
        addAddedDeletedFiles status2[@] $index2 "added"
fi

for ((i = 0; i < ${#changes[@]}; i++)); do
        echo "${changes[$i]}"
done

exit 0
